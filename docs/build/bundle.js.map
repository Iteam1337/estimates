{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/WeekBlocks.svelte","../../src/Plan.svelte","../../src/Summary.svelte","../../src/Team.svelte","../../src/Week.svelte","../../src/data/roles.js","../../src/Calculator.svelte","../../src/Information.svelte","../../src/Menu.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value' || descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.19.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n  export let week\n\n  import { createEventDispatcher } from 'svelte'\n\tconst dispatch = createEventDispatcher()\n\n  const change = e => {\n\t\tdispatch('estimateUpdated', {});\n  }\n</script>\n\n<span class=\"weekday\">\n  Måndag<br />\n  <input type=\"checkbox\" bind:checked={week.mon.am} on:change={change} />\n  <br />\n  <input type=\"checkbox\" bind:checked={week.mon.pm} on:change={change} /><br />\n</span>\n<span class=\"weekday\">\n  Tisdag<br />\n  <input type=\"checkbox\" bind:checked={week.tue.am} on:change={change} /><br />\n  <input type=\"checkbox\" bind:checked={week.tue.pm} on:change={change} /><br />\n</span>\n<span class=\"weekday\">\n  Onsdag<br />\n  <input type=\"checkbox\" bind:checked={week.wed.am} on:change={change} /><br />\n  <input type=\"checkbox\" bind:checked={week.wed.pm} on:change={change} /><br />\n</span>\n<span class=\"weekday\">\n  Torsdag<br />\n  <input type=\"checkbox\" bind:checked={week.thu.am} on:change={change} /><br />\n  <input type=\"checkbox\" bind:checked={week.thu.pm} on:change={change} /><br />\n</span>\n<span class=\"weekday\">\n  Fredag<br />\n  <input type=\"checkbox\" bind:checked={week.fri.am} on:change={change} /><br />\n  <input type=\"checkbox\" bind:checked={week.fri.pm} on:change={change} /><br />\n</span>\n\n<style>\n\tspan.weekday {\n\t\tdisplay: inline-block;\n    margin: 2px 10px;\n    text-align: center;\n    vertical-align: center;\n  }\n\n  span.weekday input[type=checkbox] {\n    margin: 8px 0 2px 0;\n  }\n</style>","<script>\n  export let team\n\timport WeekBlocks from './WeekBlocks.svelte'\n  const selected = 0\n\n  import { createEventDispatcher } from 'svelte'\n\tconst dispatch = createEventDispatcher()\n\n  const estimateUpdated = () => {\n\t\tdispatch('estimateUpdated', {});\n  }\n  \n  const templates = [\n    {\n      name: 'En dag',\n      days: 1,\n      full: ['Backend', 'Frontend', 'UX'],\n    },\n    {\n      name: 'Två dagar',\n      days: 2,\n      full: ['Backend', 'Frontend', 'UX'],\n    },\n    {\n      name: 'Tre dagar',\n      days: 3,\n      full: ['Backend', 'Frontend', 'UX'],\n    },\n    {\n      name: 'Fyra dagar',\n      days: 4,\n      full: ['Backend', 'Frontend', 'UX'],\n    },\n  ]\n\n  const prePlan = template => {\n    // Go through each team member.\n    team.forEach((member, i) => {\n      console.log(member)\n      const fullDay = template.full.indexOf(member.role) > -1\n\n      // Go through each day of the week.\n      Object.keys(member.week).forEach((dow, j) => {\n        console.log(template.days, j)\n        const am = 4\n        const pm = fullDay ? 4 : 0\n\n        if (j < template.days) {\n          team[i].week[dow].am = am\n          team[i].week[dow].pm = pm\n        } else {\n          team[i].week[dow].am = 0\n          team[i].week[dow].pm = 0\n        }\n      })\n    })\n    estimateUpdated()\n  }\n</script>\n\n{#if team.length}\n  <p>\n    Fyll veckan med en föreslagen plan\n  </p>\n  <p>\n    {#each templates as template}\n      <button on:click={() => prePlan(template)}>{template.name}</button>\n    {/each}\n  </p>\n  {#each team as member}\n    <h3>{member.role}</h3>\n    <WeekBlocks week={member.week} on:estimateUpdated={estimateUpdated} />\n    <br />\n  {/each}\n{:else}\n  <p>\n    Lägg till roller i ditt team för att börja titta på hur veckorna kan se ut.\n  </p>\n{/if}\n\n<style>\n  button {\n\t\tborder: 0px;\n\t\tbackground-color: rgba(71, 253, 164, 1);\n\t\tmargin: 0 2px;\n\t\tpadding: 8px 10px;\n\t}\n</style>","<script>\n  export let summary\n</script>\n\n<p>\n  Valt team består av <span class=\"highlight\">{summary.roles}</span> roller som tillsammans lägger <span class=\"highlight\">{summary.hours}</span> timmar i veckan.\n</p>\n<p>\n  Förväntad månadskostnad är <span class=\"highlight\">{summary.rate}</span> kr i veckan.\n</p>\n","<script>\n\texport let roles\n\texport let memberCount\n\n  import { createEventDispatcher } from 'svelte'\n\tconst dispatch = createEventDispatcher()\n\n  const add = role => {\n\t\tdispatch('addRole', {\n\t\t\trole\n\t\t})\n\t}\n\n\tconst addTemplate = template => {\n\t\ttemplates[template].forEach(role => {\n\t\t\tdispatch('addRole', {\n\t\t\t\trole\n\t\t\t})\n\t\t})\n\t}\n\n\tconst templates = {\n\t\tAPI: [\n\t\t\t'Backend',\n\t\t\t'Backend',\n\t\t\t'Backend',\n\t\t\t'DevOps',\n\t\t\t'TeamCoach',\n\t\t],\n\t\tAPP: [\n\t\t\t'Backend',\n\t\t\t'Frontend',\n\t\t\t'DevOps',\n\t\t\t'TeamCoach',\n\t\t\t'UX',\n\t\t],\n\t\tLabb: [\n\t\t\t'Backend',\n\t\t\t'Backend',\n\t\t\t'Frontend',\n\t\t\t'DevOps',\n\t\t\t'TeamCoach',\n\t\t\t'UX',\n\t\t\t'UX',\n\t\t]\n\t}\n</script>\n\n<p>\n\tKlicka på önskade roller för att lägga till dem i teamet.\n</p>\n<p>\n\t{#each Object.keys(roles) as role}\n\t\t<button class=\"available\" on:click={() => {add(role)}}>{role}</button>\n\t{/each}\n</p>\n\n{#if memberCount < 1}\n\t<p>\n\t\tEller välj ett färdigt team.\n\t</p>\n\t<p>\n\t\t{#each Object.keys(templates) as template}\n\t\t\t<button class=\"available\" on:click={() => addTemplate(template)}>{template}</button>\n\t\t{/each}\n\t</p>\n{/if}\n\n<style>\n  button {\n\t\tborder: 0px;\n\t\tbackground-color: rgba(71, 253, 164, 1);\n\t\tmargin: 0 2px;\n\t\tpadding: 8px 10px;\n\t}\n</style>","<script>\n  export let week\n</script>\n\n<span class=\"weekday\">\n  Måndag<br />\n  <span class={week.mon.am.hours > 0 ? 'highlight' : ''}>{week.mon.am.hours}</span><br />\n  <span class={week.mon.pm.hours > 0 ? 'highlight' : ''}>{week.mon.pm.hours}</span><br />\n</span>\n<span class=\"weekday\">\n  Tisdag<br />\n  <span class={week.tue.am.hours > 0 ? 'highlight' : ''}>{week.tue.am.hours}</span><br />\n  <span class={week.tue.pm.hours > 0 ? 'highlight' : ''}>{week.tue.pm.hours}</span><br />\n</span>\n<span class=\"weekday\">\n  Onsdag<br />\n  <span class={week.wed.am.hours > 0 ? 'highlight' : ''}>{week.wed.am.hours}</span><br />\n  <span class={week.wed.pm.hours > 0 ? 'highlight' : ''}>{week.wed.pm.hours}</span><br />\n</span>\n<span class=\"weekday\">\n  Torsdag<br />\n  <span class={week.thu.am.hours > 0 ? 'highlight' : ''}>{week.thu.am.hours}</span><br />\n  <span class={week.thu.pm.hours > 0 ? 'highlight' : ''}>{week.thu.pm.hours}</span><br />\n</span>\n<span class=\"weekday\">\n  Fredag<br />\n  <span class={week.fri.am.hours > 0 ? 'highlight' : ''}>{week.fri.am.hours}</span><br />\n  <span class={week.fri.pm.hours > 0 ? 'highlight' : ''}>{week.fri.pm.hours}</span><br />\n</span>\n\n<style>\n  span.weekday {\n\t\tdisplay: inline-block;\n    margin: 2px 10px;\n    text-align: center;\n    vertical-align: center;\n  }\n</style>","export const Roles = {\n  Backend: {\n    description: 'En utvecklare som bygger allt som ligger under huven. Behövs i alla projekt där man vill att saker händer bortom användargränssnitten.',\n    rate: 1000,\n  },\n  'Data Scientist': {\n    description: 'En person med bakgrund inom matematik (framförallt statistik) och AI/ML. Hjälper teamet att hitta samband, tolka data och ställa rätt typ av frågor.',\n    rate: 1200,\n  },\n  DevOps: {\n    description: 'En utvecklare som lägger fokus på driftmiljöer, säkerhet, stabilitet och alla tekniska verktyg som teamet behöver för att kunna leverera värde.',\n    rate: 1200,\n  },\n  Frontend: {\n    description: 'En utvecklare som bygger appar, webb och annat som ligger nära användarna.',\n    rate: 1000,\n  },\n  TeamCoach: {\n    description: 'TeamCoach håller koll på de bredare perspektiven och ser till att teamet fungerar bra och att alla individer har det de behöver för att kunna leverera.',\n    rate: 1500,\n  },\n  UX: {\n    description: 'En person som arbetar med slutanvändarna i fokus. Arbetar med allt från att studera användares behov och beteenden till att hålla workshops samt ta fram look-and-feel för slutprodukter.',\n    rate: 1200,\n  },\n}","<script>\n\timport Plan from './Plan.svelte'\n\timport Summary from './Summary.svelte'\n\timport Team from './Team.svelte'\n\timport Week from './Week.svelte'\n\n\timport { Roles } from './data/roles.js'\n\n\tconst estimate = {}\n\tObject.keys(Roles).forEach(role => {\n\t\testimate[role] = 0\n\t})\n\n\tconst weekTemplate = {\n\t\tmon: {\n\t\t\tam: {\n\t\t\t\ttt: 'tick',\n\t\t\t\thours: 0,\n\t\t\t},\n\t\t\tpm: {\n\t\t\t\ttt: 'tick',\n\t\t\t\thours: 0,\n\t\t\t},\n\t\t},\n\t\ttue: {\n\t\t\tam: {\n\t\t\t\ttt: 'tick',\n\t\t\t\thours: 0,\n\t\t\t},\n\t\t\tpm: {\n\t\t\t\ttt: 'tick',\n\t\t\t\thours: 0,\n\t\t\t},\n\t\t},\n\t\twed: {\n\t\t\tam: {\n\t\t\t\ttt: 'tick',\n\t\t\t\thours: 0,\n\t\t\t},\n\t\t\tpm: {\n\t\t\t\ttt: 'tock',\n\t\t\t\thours: 0,\n\t\t\t},\n\t\t},\n\t\tthu: {\n\t\t\tam: {\n\t\t\t\ttt: 'tock',\n\t\t\t\thours: 0,\n\t\t\t},\n\t\t\tpm: {\n\t\t\t\ttt: 'tock',\n\t\t\t\thours: 0,\n\t\t\t},\n\t\t},\n\t\tfri: {\n\t\t\tam: {\n\t\t\t\ttt: 'tock',\n\t\t\t\thours: 0,\n\t\t\t},\n\t\t\tpm: {\n\t\t\t\ttt: 'tock',\n\t\t\t\thours: 0,\n\t\t\t},\n\t\t},\n\t}\n\n\tlet week = JSON.parse(JSON.stringify(weekTemplate))\n\n\tconst summary = {\n\t\troles: 0,\n\t\thours: 0,\n\t\trate: 0,\n\t}\n\n\tlet team = []\n\tconst addRole = ({ detail }) => {\n\t\tteam.push({\n\t\t\trole: detail.role,\n\t\t\tweek: {\n\t\t\t\tmon: { am: false, pm: false },\n\t\t\t\ttue: { am: false, pm: false },\n\t\t\t\twed: { am: false, pm: false },\n\t\t\t\tthu: { am: false, pm: false },\n\t\t\t\tfri: { am: false, pm: false },\n\t\t\t},\n\t\t})\n\t\tteam = team // NOTE: Svelte does not trigger on array.push()\n\t}\n\n\tconst summarize = () => {\n\t\tsummary.roles = team.length\n\n\t\t// Reset week.\n\t\tweek = JSON.parse(JSON.stringify(weekTemplate))\n\t\t\n\t\t// Reset rate.\n\t\tsummary.rate = 0\n\n\t\tteam.forEach(member => {\n\t\t\tObject.keys(member.week).forEach(day => {\n\t\t\t\tif (member.week[day].am) {\n\t\t\t\t\tweek[day].am.hours += 4\n\t\t\t\t\tsummary.rate += Roles[member.role].rate * 4\n\t\t\t\t}\n\n\t\t\t\tif (member.week[day].pm) {\n\t\t\t\t\tweek[day].pm.hours += 4\n\t\t\t\t\tsummary.rate += Roles[member.role].rate * 4\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\n\t\tsummary.hours = Object.keys(week).reduce((a, day) => {\n\t\t\treturn a + week[day].am.hours + week[day].pm.hours\n\t\t}, 0)\n\t}\n</script>\n\n<h2>Team</h2>\n<hr />\n<Team roles={Roles} on:addRole={addRole} memberCount={team.length} />\n\n<h2>Tid</h2>\n<hr />\n<Plan team={team} on:estimateUpdated={summarize} />\n\n<h2>Summering</h2>\n<hr />\n{#if summary.roles > 0 && summary.hours > 0}\n\t<h3>Vad kostar det?</h3><Summary summary={summary} />\n\t<h3>Hur ser veckorna ut?</h3><Week week={week} />\n{:else}\n\t<p>\n\t\tHär kommer du att se prisexempel för teamet du sätter ihop!\n\t</p>\n{/if}\n","<script>\n\timport { Roles } from './data/roles.js'\n</script>\n\n<h2>Information</h2>\n<hr />\n{#each Object.keys(Roles) as role}\n  <h3>{role}</h3>\n  <p>\n    {Roles[role].description}<br /><br />\n    <span class=\"highlight\">Timtaxa: {Roles[role].rate} kr/h</span>\n  </p>\n{/each}","<script>\n  import { createEventDispatcher } from 'svelte'\n\tconst dispatch = createEventDispatcher()\n\n  export let view\n  const select = view => {\n\t\tdispatch('selectView', {\n\t\t\tview\n\t\t})\n  }\n  \n  const buttonClass = view => {\n    return 'meow'\n  }\n</script>\n\n<button on:click={() => select('Calculator')}  class=\"{view === 'Calculator' ? 'active' : ''}\">Sätt ihop ett team</button>\n<button on:click={() => select('Information')} class=\"{view === 'Information' ? 'active' : ''}\">Läs mer</button>\n\n<style>\n  button {\n\t\tborder: 0px;\n\t\tbackground-color: rgba(71, 253, 164, 1);\n\t\tmargin: 0 2px;\n\t\tpadding: 8px 10px;\n  }\n  \n  button.active {\n    color: rgba(100, 100, 100, 1);\n    background-color: rgba(240, 240, 240, 1);\n  }\n</style>","<script>\n  import Calculator from './Calculator.svelte'\n  import Information from './Information.svelte'\n  import Menu from './Menu.svelte'\n\n  let view = 'Calculator'\n\n  const selectViewEventHandler = ({ detail }) => {\n    view = detail.view\n  }\n</script>\n\n<main>\n  <h1>Priskalkylator</h1>\n\n  <Menu view={view} on:selectView={selectViewEventHandler} />\n\n  {#if view === 'Calculator'}\n    <Calculator />\n  {/if}\n\n  {#if view === 'Information'}\n    <Information />\n  {/if}\n</main>\n\n<style>\n  main {\n    margin: 35px auto;\n    width: 50%;\n    min-width: 600px;\n  }\n\n\t@media (max-width: 640px) {\n\t\tmain {\n\t\t\twidth: 100%;\n\t\t}\n\t}\n</style>","import App from './App.svelte'\n\nconst app = new App({\n\ttarget: document.body,\n})\n\nexport default app"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","null_to_empty","value","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","current_component","set_current_component","component","createEventDispatcher","Error","get_current_component","type","detail","callbacks","$$","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","Set","flush","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","ready","ret","rest","hydrate","l","Array","from","childNodes","children","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","mon","am","pm","tue","wed","thu","fri","week","dispatch","role","team","estimateUpdated","prePlan","template","member","console","log","fullDay","full","keys","dow","j","days","roles","hours","rate","summary","memberCount","addTemplate","templates","API","APP","Labb","Roles","Backend","description","Data Scientist","DevOps","Frontend","TeamCoach","UX","weekTemplate","tt","JSON","parse","stringify","day","reduce","view","select","body"],"mappings":"gCAAA,SAASA,KAgBT,SAASC,EAAIC,GACT,OAAOA,IAEX,SAASC,IACL,OAAOC,OAAOC,OAAO,MAEzB,SAASC,EAAQC,GACbA,EAAIC,QAAQP,GAEhB,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,EAElB,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,EAsEhF,SAASE,EAAcC,GACnB,OAAgB,MAATA,EAAgB,GAAKA,EA2DhC,SAASC,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,GAEvB,SAASE,EAAOH,EAAQC,EAAMG,GAC1BJ,EAAOK,aAAaJ,EAAMG,GAAU,MAExC,SAASE,EAAOL,GACZA,EAAKM,WAAWC,YAAYP,GAEhC,SAASQ,EAAaC,EAAYC,GAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,GAAK,EACpCF,EAAWE,IACXF,EAAWE,GAAGE,EAAEH,GAG5B,SAASI,EAAQC,GACb,OAAOC,SAASC,cAAcF,GAoBlC,SAASG,EAAKC,GACV,OAAOH,SAASI,eAAeD,GAEnC,SAASE,IACL,OAAOH,EAAK,KAEhB,SAASI,IACL,OAAOJ,EAAK,IAEhB,SAASK,EAAOvB,EAAMwB,EAAOC,EAASC,GAElC,OADA1B,EAAK2B,iBAAiBH,EAAOC,EAASC,GAC/B,IAAM1B,EAAK4B,oBAAoBJ,EAAOC,EAASC,GAuB1D,SAASG,EAAK7B,EAAM8B,EAAWjC,GACd,MAATA,EACAG,EAAK+B,gBAAgBD,GAChB9B,EAAKgC,aAAaF,KAAejC,GACtCG,EAAKiC,aAAaH,EAAWjC,GAyFrC,SAASqC,EAAShB,EAAMC,GACpBA,EAAO,GAAKA,EACRD,EAAKC,OAASA,IACdD,EAAKC,KAAOA,GAuOpB,IAAIgB,EACJ,SAASC,EAAsBC,GAC3BF,EAAoBE,EAmBxB,SAASC,IACL,MAAMD,EAlBV,WACI,IAAKF,EACD,MAAM,IAAII,MAAM,oDACpB,OAAOJ,EAeWK,GAClB,MAAO,CAACC,EAAMC,KACV,MAAMC,EAAYN,EAAUO,GAAGD,UAAUF,GACzC,GAAIE,EAAW,CAGX,MAAMnB,EA3LlB,SAAsBiB,EAAMC,GACxB,MAAMG,EAAI7B,SAAS8B,YAAY,eAE/B,OADAD,EAAEE,gBAAgBN,GAAM,GAAO,EAAOC,GAC/BG,EAwLeG,CAAaP,EAAMC,GACjCC,EAAUM,QAAQ3D,QAAQN,IACtBA,EAAGkE,KAAKb,EAAWb,OAqBnC,MAAM2B,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmBC,QAAQC,UACjC,IAAIC,GAAmB,EAWvB,SAASC,EAAoB3E,GACzBqE,EAAiBO,KAAK5E,GAK1B,IAAI6E,GAAW,EACf,MAAMC,EAAiB,IAAIC,IAC3B,SAASC,IACL,IAAIH,EAAJ,CAEAA,GAAW,EACX,EAAG,CAGC,IAAK,IAAIlD,EAAI,EAAGA,EAAIwC,EAAiBvC,OAAQD,GAAK,EAAG,CACjD,MAAM0B,EAAYc,EAAiBxC,GACnCyB,EAAsBC,GACtB4B,EAAO5B,EAAUO,IAGrB,IADAO,EAAiBvC,OAAS,EACnBwC,EAAkBxC,QACrBwC,EAAkBc,KAAlBd,GAIJ,IAAK,IAAIzC,EAAI,EAAGA,EAAI0C,EAAiBzC,OAAQD,GAAK,EAAG,CACjD,MAAMwD,EAAWd,EAAiB1C,GAC7BmD,EAAeM,IAAID,KAEpBL,EAAeO,IAAIF,GACnBA,KAGRd,EAAiBzC,OAAS,QACrBuC,EAAiBvC,QAC1B,KAAO0C,EAAgB1C,QACnB0C,EAAgBY,KAAhBZ,GAEJI,GAAmB,EACnBG,GAAW,EACXC,EAAeQ,SAEnB,SAASL,EAAOrB,GACZ,GAAoB,OAAhBA,EAAG2B,SAAmB,CACtB3B,EAAGqB,SACH7E,EAAQwD,EAAG4B,eACX,MAAMC,EAAQ7B,EAAG6B,MACjB7B,EAAG6B,MAAQ,EAAE,GACb7B,EAAG2B,UAAY3B,EAAG2B,SAASG,EAAE9B,EAAG+B,IAAKF,GACrC7B,EAAGgC,aAAatF,QAAQqE,IAiBhC,MAAMkB,EAAW,IAAId,IACrB,IAAIe,EACJ,SAASC,IACLD,EAAS,CACLE,EAAG,EACHC,EAAG,GACHP,EAAGI,GAGX,SAASI,IACAJ,EAAOE,GACR5F,EAAQ0F,EAAOG,GAEnBH,EAASA,EAAOJ,EAEpB,SAASS,EAAcC,EAAOC,GACtBD,GAASA,EAAMzE,IACfkE,EAASS,OAAOF,GAChBA,EAAMzE,EAAE0E,IAGhB,SAASE,EAAeH,EAAOC,EAAOhF,EAAQ8D,GAC1C,GAAIiB,GAASA,EAAMI,EAAG,CAClB,GAAIX,EAAST,IAAIgB,GACb,OACJP,EAASR,IAAIe,GACbN,EAAOG,EAAErB,KAAK,KACViB,EAASS,OAAOF,GACZjB,IACI9D,GACA+E,EAAMvE,EAAE,GACZsD,OAGRiB,EAAMI,EAAEH,IAmkBhB,SAASI,EAAiBL,GACtBA,GAASA,EAAMH,IAKnB,SAASS,EAAgBrD,EAAWtC,EAAQI,GACxC,MAAMoE,SAAEA,EAAQoB,SAAEA,EAAQC,WAAEA,EAAUhB,aAAEA,GAAiBvC,EAAUO,GACnE2B,GAAYA,EAASsB,EAAE9F,EAAQI,GAE/BwD,EAAoB,KAChB,MAAMmC,EAAiBH,EAASI,IAAIhH,GAAKiH,OAAOzG,GAC5CqG,EACAA,EAAWhC,QAAQkC,GAKnB1G,EAAQ0G,GAEZzD,EAAUO,GAAG+C,SAAW,KAE5Bf,EAAatF,QAAQqE,GAEzB,SAASsC,EAAkB5D,EAAW3B,GAClC,MAAMkC,EAAKP,EAAUO,GACD,OAAhBA,EAAG2B,WACHnF,EAAQwD,EAAGgD,YACXhD,EAAG2B,UAAY3B,EAAG2B,SAAS1D,EAAEH,GAG7BkC,EAAGgD,WAAahD,EAAG2B,SAAW,KAC9B3B,EAAG+B,IAAM,IAGjB,SAASuB,EAAW7D,EAAW1B,IACI,IAA3B0B,EAAUO,GAAG6B,MAAM,KACnBtB,EAAiBS,KAAKvB,GAttBrBqB,IACDA,GAAmB,EACnBH,EAAiB4C,KAAKnC,IAstBtB3B,EAAUO,GAAG6B,MAAM2B,KAAK,IAE5B/D,EAAUO,GAAG6B,MAAO9D,EAAI,GAAM,IAAO,GAAMA,EAAI,GAEnD,SAAS0F,EAAKhE,EAAWX,EAAS4E,EAAUC,EAAiBC,EAAWC,EAAOhC,EAAQ,EAAE,IACrF,MAAMiC,EAAmBvE,EACzBC,EAAsBC,GACtB,MAAMsE,EAAcjF,EAAQ+E,OAAS,GAC/B7D,EAAKP,EAAUO,GAAK,CACtB2B,SAAU,KACVI,IAAK,KAEL8B,MAAAA,EACAxC,OAAQnF,EACR0H,UAAAA,EACAI,MAAO3H,IAEP0G,SAAU,GACVC,WAAY,GACZpB,cAAe,GACfI,aAAc,GACdiC,QAAS,IAAIC,IAAIJ,EAAmBA,EAAiB9D,GAAGiE,QAAU,IAElElE,UAAW1D,IACXwF,MAAAA,GAEJ,IAAIsC,GAAQ,EACZnE,EAAG+B,IAAM2B,EACHA,EAASjE,EAAWsE,EAAa,CAAChG,EAAGqG,KAAQC,KAC3C,MAAMpH,EAAQoH,EAAKrG,OAASqG,EAAK,GAAKD,EAOtC,OANIpE,EAAG+B,KAAO6B,EAAU5D,EAAG+B,IAAIhE,GAAIiC,EAAG+B,IAAIhE,GAAKd,KACvC+C,EAAGgE,MAAMjG,IACTiC,EAAGgE,MAAMjG,GAAGd,GACZkH,GACAb,EAAW7D,EAAW1B,IAEvBqG,IAET,GACNpE,EAAGqB,SACH8C,GAAQ,EACR3H,EAAQwD,EAAG4B,eAEX5B,EAAG2B,WAAWgC,GAAkBA,EAAgB3D,EAAG+B,KAC/CjD,EAAQ3B,SACJ2B,EAAQwF,QAERtE,EAAG2B,UAAY3B,EAAG2B,SAAS4C,EA/kCvC,SAAkBrG,GACd,OAAOsG,MAAMC,KAAKvG,EAAQwG,YA8kCWC,CAAS7F,EAAQ3B,SAI9C6C,EAAG2B,UAAY3B,EAAG2B,SAASU,IAE3BvD,EAAQ8F,OACRrC,EAAc9C,EAAUO,GAAG2B,UAC/BmB,EAAgBrD,EAAWX,EAAQ3B,OAAQ2B,EAAQvB,QACnD6D,KAEJ5B,EAAsBsE,GAsC1B,MAAMe,EACFC,WACIzB,EAAkB0B,KAAM,GACxBA,KAAKC,SAAW9I,EAEpB4I,IAAIjF,EAAM0B,GACN,MAAMxB,EAAagF,KAAK/E,GAAGD,UAAUF,KAAUkF,KAAK/E,GAAGD,UAAUF,GAAQ,IAEzE,OADAE,EAAUiB,KAAKO,GACR,KACH,MAAM0D,EAAQlF,EAAUmF,QAAQ3D,IACjB,IAAX0D,GACAlF,EAAUoF,OAAOF,EAAO,IAGpCH,25CCh6CmC/C,KAAKqD,IAAIC,yCAETtD,KAAKqD,IAAIE,kEAITvD,KAAKwD,IAAIF,kCACTtD,KAAKwD,IAAID,kEAITvD,KAAKyD,IAAIH,kCACTtD,KAAKyD,IAAIF,kEAITvD,KAAK0D,IAAIJ,kCACTtD,KAAK0D,IAAIH,sEAITvD,KAAK2D,IAAIL,sCACTtD,KAAK2D,IAAIJ,+CAtBevD,sCAEAA,sCAIAA,sCACAA,sCAIAA,sCACAA,sCAIAA,uCACAA,yCAIAA,yCACAA,iCAtBxBA,KAAKqD,IAAIC,oBAETtD,KAAKqD,IAAIE,oBAITvD,KAAKwD,IAAIF,oBACTtD,KAAKwD,IAAID,oBAITvD,KAAKyD,IAAIH,oBACTtD,KAAKyD,IAAIF,oBAITvD,KAAK0D,IAAIJ,oBACTtD,KAAK0D,IAAIH,qBAITvD,KAAK2D,IAAIL,qBACTtD,KAAK2D,IAAIJ,6HAlCnCK,WAGNC,EAAWlG,oDAEDO,IACf2F,EAAS,oCAM4BD,EAAKP,IAAIC,mCAETM,EAAKP,IAAIE,mCAITK,EAAKJ,IAAIF,mCACTM,EAAKJ,IAAID,mCAITK,EAAKH,IAAIH,mCACTM,EAAKH,IAAIF,mCAITK,EAAKF,IAAIJ,mCACTM,EAAKF,IAAIH,mCAITK,EAAKD,IAAIL,mCACTM,EAAKD,IAAIJ,2ZC8BrCvD,0BAAL/D,mCAIG+D,0BAAL/D,0ZAJO+D,aAAL/D,6HAAAA,2BAIG+D,aAAL/D,6HAAAA,8DAAAA,qLAH8C+D,KAAS5D,uNAIlD4D,KAAO8D,mCACM9D,KAAO4D,uCAA0B5D,8JAD9CA,KAAO8D,yCACM9D,KAAO4D,oMAXxB5D,KAAK/D,mUA3DG8H,WAKNF,EAAWlG,IAEVqG,OACNH,EAAS,uBA0BHI,EAAUC,IAEdH,EAAKpJ,SAASwJ,EAAQnI,KACpBoI,QAAQC,IAAIF,SACNG,EAAUJ,EAASK,KAAKpB,QAAQgB,EAAOL,OAAS,EAGtDvJ,OAAOiK,KAAKL,EAAOP,MAAMjJ,SAAS8J,EAAKC,KACrCN,QAAQC,IAAIH,EAASS,KAAMD,SAErBnB,EAAKe,EAAU,EAAI,EAErBI,EAAIR,EAASS,UACfZ,EAAK/H,GAAG4H,KAAKa,GAAKnB,GAJT,SAKTS,EAAK/H,GAAG4H,KAAKa,GAAKlB,GAAKA,WAEvBQ,EAAK/H,GAAG4H,KAAKa,GAAKnB,GAAK,SACvBS,EAAK/H,GAAG4H,KAAKa,GAAKlB,GAAK,UAI7BS,yDA1CE5H,KAAM,SACNuI,KAAM,EACNJ,MAAO,UAAW,WAAY,QAG9BnI,KAAM,YACNuI,KAAM,EACNJ,MAAO,UAAW,WAAY,QAG9BnI,KAAM,YACNuI,KAAM,EACNJ,MAAO,UAAW,WAAY,QAG9BnI,KAAM,aACNuI,KAAM,EACNJ,MAAO,UAAW,WAAY,eAmCNN,EAAQC,0HC7DSlE,KAAQ4E,WAAqE5E,KAAQ6E,WAG9E7E,KAAQ8E,ycAHf9E,KAAQ4E,8BAAqE5E,KAAQ6E,8BAG9E7E,KAAQ8E,wFAPjDC,iRCoD6C/E,2LAAAA,iEASjDzF,OAAOiK,KAAKxE,2BAAjB/D,+PAAK1B,OAAOiK,KAAKxE,cAAjB/D,+HAAAA,0EACiE+D,gOAX7DzF,OAAOiK,KAAKxE,2BAAjB/D,qCAKE+D,KAAc,0TALXzF,OAAOiK,KAAKxE,cAAjB/D,+HAAAA,OAKE+D,KAAc,0KAxDP4E,kBACAI,WAGLnB,EAAWlG,IAEV+B,EAAMoE,IACZD,EAAS,WACRC,KAAAA,KAIImB,EAAcf,IACnBgB,EAAUhB,GAAUvJ,QAAQmJ,IAC3BD,EAAS,WACRC,KAAAA,OAKGoB,GACLC,KACC,UACA,UACA,UACA,SACA,aAEDC,KACC,UACA,WACA,SACA,YACA,MAEDC,MACC,UACA,UACA,WACA,SACA,YACA,KACA,+GAU0C3F,EAAIoE,OAUJmB,EAAYf,kRCzDClE,KAAKqD,IAAIC,GAAGuB,YACZ7E,KAAKqD,IAAIE,GAAGsB,YAIZ7E,KAAKwD,IAAIF,GAAGuB,YACZ7E,KAAKwD,IAAID,GAAGsB,YAIZ7E,KAAKyD,IAAIH,GAAGuB,YACZ7E,KAAKyD,IAAIF,GAAGsB,YAIZ7E,KAAK0D,IAAIJ,GAAGuB,YACZ7E,KAAK0D,IAAIH,GAAGsB,YAIZ7E,KAAK2D,IAAIL,GAAGuB,YACZ7E,KAAK2D,IAAIJ,GAAGsB,4mBArBvD7E,KAAKqD,IAAIC,GAAGuB,MAAQ,EAAI,YAAc,kBACtC7E,KAAKqD,IAAIE,GAAGsB,MAAQ,EAAI,YAAc,wDAItC7E,KAAKwD,IAAIF,GAAGuB,MAAQ,EAAI,YAAc,kBACtC7E,KAAKwD,IAAID,GAAGsB,MAAQ,EAAI,YAAc,wDAItC7E,KAAKyD,IAAIH,GAAGuB,MAAQ,EAAI,YAAc,kBACtC7E,KAAKyD,IAAIF,GAAGsB,MAAQ,EAAI,YAAc,0DAItC7E,KAAK0D,IAAIJ,GAAGuB,MAAQ,EAAI,YAAc,oBACtC7E,KAAK0D,IAAIH,GAAGsB,MAAQ,EAAI,YAAc,0DAItC7E,KAAK2D,IAAIL,GAAGuB,MAAQ,EAAI,YAAc,oBACtC7E,KAAK2D,IAAIJ,GAAGsB,MAAQ,EAAI,YAAc,2hBArBK7E,KAAKqD,IAAIC,GAAGuB,+BAAvD7E,KAAKqD,IAAIC,GAAGuB,MAAQ,EAAI,YAAc,kCACK7E,KAAKqD,IAAIE,GAAGsB,+BAAvD7E,KAAKqD,IAAIE,GAAGsB,MAAQ,EAAI,YAAc,kCAIK7E,KAAKwD,IAAIF,GAAGuB,+BAAvD7E,KAAKwD,IAAIF,GAAGuB,MAAQ,EAAI,YAAc,kCACK7E,KAAKwD,IAAID,GAAGsB,+BAAvD7E,KAAKwD,IAAID,GAAGsB,MAAQ,EAAI,YAAc,kCAIK7E,KAAKyD,IAAIH,GAAGuB,+BAAvD7E,KAAKyD,IAAIH,GAAGuB,MAAQ,EAAI,YAAc,kCACK7E,KAAKyD,IAAIF,GAAGsB,+BAAvD7E,KAAKyD,IAAIF,GAAGsB,MAAQ,EAAI,YAAc,kCAIK7E,KAAK0D,IAAIJ,GAAGuB,kCAAvD7E,KAAK0D,IAAIJ,GAAGuB,MAAQ,EAAI,YAAc,oCACK7E,KAAK0D,IAAIH,GAAGsB,kCAAvD7E,KAAK0D,IAAIH,GAAGsB,MAAQ,EAAI,YAAc,oCAIK7E,KAAK2D,IAAIL,GAAGuB,kCAAvD7E,KAAK2D,IAAIL,GAAGuB,MAAQ,EAAI,YAAc,oCACK7E,KAAK2D,IAAIJ,GAAGsB,kCAAvD7E,KAAK2D,IAAIJ,GAAGsB,MAAQ,EAAI,YAAc,4IA1BxCjB,4HCDN,MAAM0B,GAAQ,CACnBC,QAAS,CACPC,YAAa,yIACbV,KAAM,KAERW,iBAAkB,CAChBD,YAAa,uJACbV,KAAM,MAERY,OAAQ,CACNF,YAAa,kJACbV,KAAM,MAERa,SAAU,CACRH,YAAa,6EACbV,KAAM,KAERc,UAAW,CACTJ,YAAa,0JACbV,KAAM,MAERe,GAAI,CACFL,YAAa,4LACbV,KAAM,mOC0GiC9E,8BACDA,iPADCA,wCACDA,yPAV7BsF,eAAyCtF,KAAK/D,0BAA3B+D,kCAIpBA,gCAA0BA,kDAIjCA,KAAQ4E,MAAQ,GAAK5E,KAAQ6E,MAAQ,geARY7E,KAAK/D,0CAI/C+D,+aAnHXzF,OAAOiK,KAAKc,IAAO3K,QAAQmJ,aAIrBgC,GACLzC,KACCC,IACCyC,GAAI,OACJlB,MAAO,GAERtB,IACCwC,GAAI,OACJlB,MAAO,IAGTrB,KACCF,IACCyC,GAAI,OACJlB,MAAO,GAERtB,IACCwC,GAAI,OACJlB,MAAO,IAGTpB,KACCH,IACCyC,GAAI,OACJlB,MAAO,GAERtB,IACCwC,GAAI,OACJlB,MAAO,IAGTnB,KACCJ,IACCyC,GAAI,OACJlB,MAAO,GAERtB,IACCwC,GAAI,OACJlB,MAAO,IAGTlB,KACCL,IACCyC,GAAI,OACJlB,MAAO,GAERtB,IACCwC,GAAI,OACJlB,MAAO,SAKNjB,EAAOoC,KAAKC,MAAMD,KAAKE,UAAUJ,UAE/Bf,GACLH,MAAO,EACPC,MAAO,EACPC,KAAM,OAGHf,oBACehG,OAAAA,MAClBgG,EAAK9E,MACJ6E,KAAM/F,EAAO+F,KACbF,MACCP,KAAOC,IAAI,EAAOC,IAAI,GACtBC,KAAOF,IAAI,EAAOC,IAAI,GACtBE,KAAOH,IAAI,EAAOC,IAAI,GACtBG,KAAOJ,IAAI,EAAOC,IAAI,GACtBI,KAAOL,IAAI,EAAOC,IAAI,UAGxBQ,EAAOA,aAIPgB,EAAQH,MAAQb,EAAK9H,cAGrB2H,EAAOoC,KAAKC,MAAMD,KAAKE,UAAUJ,SAGjCf,EAAQD,KAAO,KAEff,EAAKpJ,QAAQwJ,IACZ5J,OAAOiK,KAAKL,EAAOP,MAAMjJ,QAAQwL,IAC5BhC,EAAOP,KAAKuC,GAAK7C,SACpBM,EAAKuC,GAAK7C,GAAGuB,OAAS,SACtBE,EAAQD,MAAkC,EAA1BQ,GAAMnB,EAAOL,MAAMgB,SAGhCX,EAAOP,KAAKuC,GAAK5C,SACpBK,EAAKuC,GAAK5C,GAAGsB,OAAS,SACtBE,EAAQD,MAAkC,EAA1BQ,GAAMnB,EAAOL,MAAMgB,iBAKtCC,EAAQF,MAAQtK,OAAOiK,KAAKZ,GAAMwC,QAAQrL,EAAGoL,IACrCpL,EAAI6I,EAAKuC,GAAK7C,GAAGuB,MAAQjB,EAAKuC,GAAK5C,GAAGsB,MAC3C,+KC3GE7E,UAEFsF,GAAMtF,MAAMwF,iBACqBF,GAAMtF,MAAM8E,gVAJ3CvK,OAAOiK,KAAKc,yBAAjBrJ,4QAAK1B,OAAOiK,KAAKc,YAAjBrJ,uIAAAA,kRCU8D,eAAT+D,KAAwB,SAAW,sCAC1B,gBAATA,KAAyB,SAAW,uIAD3B,eAATA,KAAwB,SAAW,oDAC1B,gBAATA,KAAyB,SAAW,4GAfpF6D,EAAWlG,aAEL0I,WACLC,EAASD,IACfxC,EAAS,cACRwC,KAAAA,yDAImBA,GACX,WAIaC,EAAO,kBACPA,EAAO,qeCFjBtG,2BAAqBA,YAEnB,eAATA,aAIS,gBAATA,2RANOA,gBAEE,eAATA,gFAIS,gBAATA,sOAhBDqG,EAAO,wBAEuBtI,OAAAA,UAChCsI,EAAOtI,EAAOsI,eCNN,kEAAQ,CACnBjL,OAAQiB,SAASkK"}