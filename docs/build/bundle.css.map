{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Menu.svelte",
    "../../Week.svelte",
    "../../Plan.svelte",
    "../../Team.svelte",
    "../../WeekBlocks.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Calculator from './Calculator.svelte'\n  import Information from './Information.svelte'\n  import Menu from './Menu.svelte'\n\n  let view = 'Calculator'\n\n  const selectViewEventHandler = ({ detail }) => {\n    view = detail.view\n  }\n</script>\n\n<main>\n  <h1>Priskalkylator</h1>\n\n  <Menu view={view} on:selectView={selectViewEventHandler} />\n\n  {#if view === 'Calculator'}\n    <Calculator />\n  {/if}\n\n  {#if view === 'Information'}\n    <Information />\n  {/if}\n</main>\n\n<style>\n  main {\n    margin: 35px auto;\n    width: 50%;\n    min-width: 600px;\n  }\n\n\t@media (max-width: 640px) {\n\t\tmain {\n\t\t\twidth: 100%;\n\t\t}\n\t}\n</style>",
    "<script>\n  import { createEventDispatcher } from 'svelte'\n\tconst dispatch = createEventDispatcher()\n\n  export let view\n  const select = view => {\n\t\tdispatch('selectView', {\n\t\t\tview\n\t\t})\n  }\n  \n  const buttonClass = view => {\n    return 'meow'\n  }\n</script>\n\n<button on:click={() => select('Calculator')}  class=\"{view === 'Calculator' ? 'active' : ''}\">Sätt ihop ett team</button>\n<button on:click={() => select('Information')} class=\"{view === 'Information' ? 'active' : ''}\">Läs mer</button>\n\n<style>\n  button {\n\t\tborder: 0px;\n\t\tbackground-color: rgba(71, 253, 164, 1);\n\t\tmargin: 0 2px;\n\t\tpadding: 8px 10px;\n  }\n  \n  button.active {\n    color: rgba(100, 100, 100, 1);\n    background-color: rgba(240, 240, 240, 1);\n  }\n</style>",
    "<script>\n  export let week\n</script>\n\n<span class=\"weekday\">\n  Måndag<br />\n  <span class={week.mon.am.hours > 0 ? 'highlight' : ''}>{week.mon.am.hours}</span><br />\n  <span class={week.mon.pm.hours > 0 ? 'highlight' : ''}>{week.mon.pm.hours}</span><br />\n</span>\n<span class=\"weekday\">\n  Tisdag<br />\n  <span class={week.tue.am.hours > 0 ? 'highlight' : ''}>{week.tue.am.hours}</span><br />\n  <span class={week.tue.pm.hours > 0 ? 'highlight' : ''}>{week.tue.pm.hours}</span><br />\n</span>\n<span class=\"weekday\">\n  Onsdag<br />\n  <span class={week.wed.am.hours > 0 ? 'highlight' : ''}>{week.wed.am.hours}</span><br />\n  <span class={week.wed.pm.hours > 0 ? 'highlight' : ''}>{week.wed.pm.hours}</span><br />\n</span>\n<span class=\"weekday\">\n  Torsdag<br />\n  <span class={week.thu.am.hours > 0 ? 'highlight' : ''}>{week.thu.am.hours}</span><br />\n  <span class={week.thu.pm.hours > 0 ? 'highlight' : ''}>{week.thu.pm.hours}</span><br />\n</span>\n<span class=\"weekday\">\n  Fredag<br />\n  <span class={week.fri.am.hours > 0 ? 'highlight' : ''}>{week.fri.am.hours}</span><br />\n  <span class={week.fri.pm.hours > 0 ? 'highlight' : ''}>{week.fri.pm.hours}</span><br />\n</span>\n\n<style>\n  span.weekday {\n\t\tdisplay: inline-block;\n    margin: 2px 10px;\n    text-align: center;\n    vertical-align: center;\n  }\n</style>",
    "<script>\n  export let team\n\timport WeekBlocks from './WeekBlocks.svelte'\n  const selected = 0\n\n  import { createEventDispatcher } from 'svelte'\n\tconst dispatch = createEventDispatcher()\n\n  const estimateUpdated = () => {\n\t\tdispatch('estimateUpdated', {});\n  }\n  \n  const templates = [\n    {\n      name: 'En dag',\n      days: 1,\n      full: ['Backend', 'Frontend', 'UX'],\n    },\n    {\n      name: 'Två dagar',\n      days: 2,\n      full: ['Backend', 'Frontend', 'UX'],\n    },\n    {\n      name: 'Tre dagar',\n      days: 3,\n      full: ['Backend', 'Frontend', 'UX'],\n    },\n    {\n      name: 'Fyra dagar',\n      days: 4,\n      full: ['Backend', 'Frontend', 'UX'],\n    },\n  ]\n\n  const prePlan = template => {\n    // Go through each team member.\n    team.forEach((member, i) => {\n      console.log(member)\n      const fullDay = template.full.indexOf(member.role) > -1\n\n      // Go through each day of the week.\n      Object.keys(member.week).forEach((dow, j) => {\n        console.log(template.days, j)\n        const am = 4\n        const pm = fullDay ? 4 : 0\n\n        if (j < template.days) {\n          team[i].week[dow].am = am\n          team[i].week[dow].pm = pm\n        } else {\n          team[i].week[dow].am = 0\n          team[i].week[dow].pm = 0\n        }\n      })\n    })\n    estimateUpdated()\n  }\n</script>\n\n{#if team.length}\n  <p>\n    Fyll veckan med en föreslagen plan\n  </p>\n  <p>\n    {#each templates as template}\n      <button on:click={() => prePlan(template)}>{template.name}</button>\n    {/each}\n  </p>\n  {#each team as member}\n    <h3>{member.role}</h3>\n    <WeekBlocks week={member.week} on:estimateUpdated={estimateUpdated} />\n    <br />\n  {/each}\n{:else}\n  <p>\n    Lägg till roller i ditt team för att börja titta på hur veckorna kan se ut.\n  </p>\n{/if}\n\n<style>\n  button {\n\t\tborder: 0px;\n\t\tbackground-color: rgba(71, 253, 164, 1);\n\t\tmargin: 0 2px;\n\t\tpadding: 8px 10px;\n\t}\n</style>",
    "<script>\n\texport let roles\n\texport let memberCount\n\n  import { createEventDispatcher } from 'svelte'\n\tconst dispatch = createEventDispatcher()\n\n  const add = role => {\n\t\tdispatch('addRole', {\n\t\t\trole\n\t\t})\n\t}\n\n\tconst addTemplate = template => {\n\t\ttemplates[template].forEach(role => {\n\t\t\tdispatch('addRole', {\n\t\t\t\trole\n\t\t\t})\n\t\t})\n\t}\n\n\tconst templates = {\n\t\tAPI: [\n\t\t\t'Backend',\n\t\t\t'Backend',\n\t\t\t'Backend',\n\t\t\t'DevOps',\n\t\t\t'TeamCoach',\n\t\t],\n\t\tAPP: [\n\t\t\t'Backend',\n\t\t\t'Frontend',\n\t\t\t'DevOps',\n\t\t\t'TeamCoach',\n\t\t\t'UX',\n\t\t],\n\t\tLabb: [\n\t\t\t'Backend',\n\t\t\t'Backend',\n\t\t\t'Frontend',\n\t\t\t'DevOps',\n\t\t\t'TeamCoach',\n\t\t\t'UX',\n\t\t\t'UX',\n\t\t]\n\t}\n</script>\n\n<p>\n\tKlicka på önskade roller för att lägga till dem i teamet.\n</p>\n<p>\n\t{#each Object.keys(roles) as role}\n\t\t<button class=\"available\" on:click={() => {add(role)}}>{role}</button>\n\t{/each}\n</p>\n\n{#if memberCount < 1}\n\t<p>\n\t\tEller välj ett färdigt team.\n\t</p>\n\t<p>\n\t\t{#each Object.keys(templates) as template}\n\t\t\t<button class=\"available\" on:click={() => addTemplate(template)}>{template}</button>\n\t\t{/each}\n\t</p>\n{/if}\n\n<style>\n  button {\n\t\tborder: 0px;\n\t\tbackground-color: rgba(71, 253, 164, 1);\n\t\tmargin: 0 2px;\n\t\tpadding: 8px 10px;\n\t}\n</style>",
    "<script>\n  export let week\n\n  import { createEventDispatcher } from 'svelte'\n\tconst dispatch = createEventDispatcher()\n\n  const change = e => {\n\t\tdispatch('estimateUpdated', {});\n  }\n</script>\n\n<span class=\"weekday\">\n  Måndag<br />\n  <input type=\"checkbox\" bind:checked={week.mon.am} on:change={change} />\n  <br />\n  <input type=\"checkbox\" bind:checked={week.mon.pm} on:change={change} /><br />\n</span>\n<span class=\"weekday\">\n  Tisdag<br />\n  <input type=\"checkbox\" bind:checked={week.tue.am} on:change={change} /><br />\n  <input type=\"checkbox\" bind:checked={week.tue.pm} on:change={change} /><br />\n</span>\n<span class=\"weekday\">\n  Onsdag<br />\n  <input type=\"checkbox\" bind:checked={week.wed.am} on:change={change} /><br />\n  <input type=\"checkbox\" bind:checked={week.wed.pm} on:change={change} /><br />\n</span>\n<span class=\"weekday\">\n  Torsdag<br />\n  <input type=\"checkbox\" bind:checked={week.thu.am} on:change={change} /><br />\n  <input type=\"checkbox\" bind:checked={week.thu.pm} on:change={change} /><br />\n</span>\n<span class=\"weekday\">\n  Fredag<br />\n  <input type=\"checkbox\" bind:checked={week.fri.am} on:change={change} /><br />\n  <input type=\"checkbox\" bind:checked={week.fri.pm} on:change={change} /><br />\n</span>\n\n<style>\n\tspan.weekday {\n\t\tdisplay: inline-block;\n    margin: 2px 10px;\n    text-align: center;\n    vertical-align: center;\n  }\n\n  span.weekday input[type=checkbox] {\n    margin: 8px 0 2px 0;\n  }\n</style>"
  ],
  "names": [],
  "mappings": "AA2BE,IAAI,cAAC,CAAC,AACJ,MAAM,CAAE,IAAI,CAAC,IAAI,CACjB,KAAK,CAAE,GAAG,CACV,SAAS,CAAE,KAAK,AAClB,CAAC,AAEF,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAC1B,IAAI,cAAC,CAAC,AACL,KAAK,CAAE,IAAI,AACZ,CAAC,AACF,CAAC;ACjBA,MAAM,cAAC,CAAC,AACR,MAAM,CAAE,GAAG,CACX,gBAAgB,CAAE,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACvC,MAAM,CAAE,CAAC,CAAC,GAAG,CACb,OAAO,CAAE,GAAG,CAAC,IAAI,AACjB,CAAC,AAED,MAAM,OAAO,cAAC,CAAC,AACb,KAAK,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAC7B,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,AAC1C,CAAC;ACCD,IAAI,QAAQ,eAAC,CAAC,AACd,OAAO,CAAE,YAAY,CACnB,MAAM,CAAE,GAAG,CAAC,IAAI,CAChB,UAAU,CAAE,MAAM,CAClB,cAAc,CAAE,MAAM,AACxB,CAAC;AC6CD,MAAM,eAAC,CAAC,AACR,MAAM,CAAE,GAAG,CACX,gBAAgB,CAAE,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACvC,MAAM,CAAE,CAAC,CAAC,GAAG,CACb,OAAO,CAAE,GAAG,CAAC,IAAI,AAClB,CAAC;ACjBA,MAAM,eAAC,CAAC,AACR,MAAM,CAAE,GAAG,CACX,gBAAgB,CAAE,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACvC,MAAM,CAAE,CAAC,CAAC,GAAG,CACb,OAAO,CAAE,GAAG,CAAC,IAAI,AAClB,CAAC;ACnCD,IAAI,QAAQ,8BAAC,CAAC,AACb,OAAO,CAAE,YAAY,CACnB,MAAM,CAAE,GAAG,CAAC,IAAI,CAChB,UAAU,CAAE,MAAM,CAClB,cAAc,CAAE,MAAM,AACxB,CAAC,AAED,IAAI,uBAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAC,CAAC,AACjC,MAAM,CAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,AACrB,CAAC"
}